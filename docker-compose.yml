# Telling docker what version of the docker-compose file we are using
version: "3.8"

# Defining the services that we are going to use
services:
  # Defining the database service, in this case it's postgres
  db:
    # Using the latest version of the postgres image
    image: postgres:latest
    # Setting the environment variables for the postgres database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: django_db
    # Defines where Docker should store the data for the Postgres database
    volumes:
      # The data from the Postgres database is stored in a Docker volume named postgres_data
      - postgres_data:/var/lib/postgresql/data

  # Defining the web service, in this case it's a python web server
  web:
    # Building the image from the current directory
    build: .
    # The command Docker will run to start the web server
    command: python blog_project/manage.py runserver 0.0.0.0:8000
    # Defines where Docker should store the code for the web server
    volumes:
      # The code from the current directory on the host is made available in the /code directory in the container
      - .:/code
    # Telling docker to expose the port 8000
    ports:
      - "8000:8000"
    # Telling docker to wait for the db service to be ready before starting the web service
    depends_on:
      - db

# Defines the Docker volumes used in this Docker Compose file
volumes:
  postgres_data:
